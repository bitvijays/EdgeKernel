* Messaging Queue Services

** ZeroMQ
https://blog.scottlogic.com/2015/03/20/ZeroMQ-Quick-Intro.html
https://stackoverflow.com/questions/731233/activemq-or-rabbitmq-or-zeromq-or
http://zguide.zeromq.org/page:all
Very lightweight
Blazingly fast
Minimal

** RabbitMQ
Implements AMQP Protocol
Messages are queued on central node <- ideal? 
Easy to use and deploy
Lots of features supported
       -> central node reduces scalability
Good for 

** ActiveMQ
Middleground between Zero and Rabbit, offers more than Zero, less than Rabbit

** Redis
Can support lots of messages 
Already a database/data-store
Can handle the memory and pub/sub channels
Allows for Pub/Sub message paradigm 

* Databases

** Redis
In memory dataset 
Allows dumping to disk or append commands to log



* Best Case? Redis
Due to the fact that it is both a KV-store and provides a PUB/SUB messaging, using this provides a more homogenous system...for now
In terms of having an ecosystem this would be nicest, but not necessarily the best 

ZeroMQ has advantages due to latency however for a rudementory prototype, simplicity is key
